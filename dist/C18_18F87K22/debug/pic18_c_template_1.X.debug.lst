

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Oct 25 17:22:46 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           	psect	nvCOMRAM
    20  000029                     __pnvCOMRAM:
    21                           	opt stack 0
    22  000029                     _PORTC_shadow:
    23                           	opt stack 0
    24  000029                     	ds	1
    25  0000                     _PORTA	set	3968
    26  0000                     _PORTB	set	3969
    27  0000                     _PORTC	set	3970
    28  0000                     _TRISA	set	3986
    29  0000                     _TRISB	set	3987
    30  0000                     _TRISC	set	3988
    31                           
    32                           ; #config settings
    33                           
    34                           	psect	cinit
    35  00020E                     __pcinit:
    36                           	opt stack 0
    37  00020E                     start_initialization:
    38                           	opt stack 0
    39  00020E                     __initialization:
    40                           	opt stack 0
    41                           
    42                           ; Clear objects allocated to COMRAM (2 bytes)
    43  00020E  6A28               	clrf	(__pbssCOMRAM+1)& (0+255),c
    44  000210  6A27               	clrf	__pbssCOMRAM& (0+255),c
    45  000212                     end_of_initialization:
    46                           	opt stack 0
    47  000212                     __end_of__initialization:
    48                           	opt stack 0
    49  000212  902A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    50  000214  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    51  000216  0100               	movlb	0
    52  000218  EFF0  F000         	goto	_main	;jump to C main() function
    53                           
    54                           	psect	bssCOMRAM
    55  000027                     __pbssCOMRAM:
    56                           	opt stack 0
    57  000027                     _PORTA_shadow:
    58                           	opt stack 0
    59  000027                     	ds	1
    60  000028                     _PORTB_shadow:
    61                           	opt stack 0
    62  000028                     	ds	1
    63                           
    64                           	psect	cstackCOMRAM
    65  000001                     __pcstackCOMRAM:
    66                           	opt stack 0
    67  000001                     ??_high_isr:
    68  000001                     
    69                           ; 1 bytes @ 0x0
    70  000001                     	ds	14
    71  00000F                     ??_low_isr:
    72                           
    73                           ; 1 bytes @ 0xE
    74  00000F                     	ds	17
    75  000020                     delay@s:
    76                           	opt stack 0
    77                           
    78                           ; 2 bytes @ 0x1F
    79  000020                     	ds	2
    80  000022                     ??_delay:
    81                           
    82                           ; 1 bytes @ 0x21
    83  000022                     	ds	1
    84  000023                     delay@a:
    85                           	opt stack 0
    86                           
    87                           ; 2 bytes @ 0x22
    88  000023                     	ds	2
    89  000025                     delay@i:
    90                           	opt stack 0
    91                           
    92                           ; 2 bytes @ 0x24
    93  000025                     	ds	2
    94  000027                     
    95                           ; 1 bytes @ 0x26
    96 ;;
    97 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    98 ;;
    99 ;; *************** function _main *****************
   100 ;; Defined at:
   101 ;;		line 41 in file "main.c"
   102 ;; Parameters:    Size  Location     Type
   103 ;;		None
   104 ;; Auto vars:     Size  Location     Type
   105 ;;		None
   106 ;; Return value:  Size  Location     Type
   107 ;;                  1    wreg      void 
   108 ;; Registers used:
   109 ;;		wreg, status,2, status,0, cstack
   110 ;; Tracked objects:
   111 ;;		On entry : 0/0
   112 ;;		On exit  : 0/0
   113 ;;		Unchanged: 0/0
   114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   115 ;;      Params:         0       0       0       0       0       0       0
   116 ;;      Locals:         0       0       0       0       0       0       0
   117 ;;      Temps:          0       0       0       0       0       0       0
   118 ;;      Totals:         0       0       0       0       0       0       0
   119 ;;Total ram usage:        0 bytes
   120 ;; Hardware stack levels required when called:    4
   121 ;; This function calls:
   122 ;;		_test_shift_register
   123 ;; This function is called by:
   124 ;;		Startup code after reset
   125 ;; This function uses a non-reentrant model
   126 ;;
   127                           
   128                           	psect	text0
   129  0001E0                     __ptext0:
   130                           	opt stack 0
   131  0001E0                     _main:
   132                           	opt stack 27
   133                           
   134                           ;main.c: 43: TRISB = 0;
   135                           
   136                           ;incstack = 0
   137  0001E0  0E00               	movlw	0
   138  0001E2  6E93               	movwf	3987,c	;volatile
   139                           
   140                           ;main.c: 44: TRISC = 0;
   141  0001E4  0E00               	movlw	0
   142  0001E6  6E94               	movwf	3988,c	;volatile
   143                           
   144                           ;main.c: 45: TRISA = 0;
   145  0001E8  0E00               	movlw	0
   146  0001EA  6E92               	movwf	3986,c	;volatile
   147                           
   148                           ;main.c: 47: PORTA_shadow = 0x00;
   149  0001EC  0E00               	movlw	0
   150  0001EE  6E27               	movwf	_PORTA_shadow,c
   151                           
   152                           ;main.c: 48: PORTB_shadow = 0x00;
   153  0001F0  0E00               	movlw	0
   154  0001F2  6E28               	movwf	_PORTB_shadow,c
   155                           
   156                           ;main.c: 49: PORTC_shadow = 0x00;
   157  0001F4  0E00               	movlw	0
   158  0001F6  6E29               	movwf	_PORTC_shadow,c
   159                           
   160                           ;main.c: 50: PORTA = PORTA_shadow;
   161  0001F8  C027  FF80         	movff	_PORTA_shadow,3968	;volatile
   162                           
   163                           ;main.c: 51: PORTB = PORTB_shadow;
   164  0001FC  C028  FF81         	movff	_PORTB_shadow,3969	;volatile
   165                           
   166                           ;main.c: 52: PORTC = PORTC_shadow;
   167  000200  C029  FF82         	movff	_PORTC_shadow,3970	;volatile
   168                           
   169                           ;main.c: 54: PORTA = 0xFF;
   170  000204  6880               	setf	3968,c	;volatile
   171                           
   172                           ;main.c: 56: test_shift_register();
   173  000206  EC55  F000         	call	_test_shift_register	;wreg free
   174  00020A  EF53  F000         	goto	start
   175  00020E                     __end_of_main:
   176                           	opt stack 0
   177                           
   178 ;; *************** function _test_shift_register *****************
   179 ;; Defined at:
   180 ;;		line 145 in file "main.c"
   181 ;; Parameters:    Size  Location     Type
   182 ;;		None
   183 ;; Auto vars:     Size  Location     Type
   184 ;;		None
   185 ;; Return value:  Size  Location     Type
   186 ;;                  1    wreg      void 
   187 ;; Registers used:
   188 ;;		wreg, status,2, status,0, cstack
   189 ;; Tracked objects:
   190 ;;		On entry : 0/0
   191 ;;		On exit  : 0/0
   192 ;;		Unchanged: 0/0
   193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   194 ;;      Params:         0       0       0       0       0       0       0
   195 ;;      Locals:         0       0       0       0       0       0       0
   196 ;;      Temps:          0       0       0       0       0       0       0
   197 ;;      Totals:         0       0       0       0       0       0       0
   198 ;;Total ram usage:        0 bytes
   199 ;; Hardware stack levels used:    1
   200 ;; Hardware stack levels required when called:    3
   201 ;; This function calls:
   202 ;;		_delay
   203 ;; This function is called by:
   204 ;;		_main
   205 ;; This function uses a non-reentrant model
   206 ;;
   207                           
   208                           	psect	text1
   209  0000AA                     __ptext1:
   210                           	opt stack 0
   211  0000AA                     _test_shift_register:
   212                           	opt stack 27
   213                           
   214                           ;main.c: 152: PORTC_shadow = PORTC_shadow | (1 << 7);
   215                           
   216                           ;incstack = 0
   217  0000AA  5029               	movf	_PORTC_shadow,w,c
   218  0000AC  0980               	iorlw	128
   219  0000AE  6E29               	movwf	_PORTC_shadow,c
   220                           
   221                           ;main.c: 153: PORTC = PORTC_shadow;
   222  0000B0  C029  FF82         	movff	_PORTC_shadow,3970	;volatile
   223                           
   224                           ;main.c: 154: delay(100);
   225  0000B4  0E00               	movlw	0
   226  0000B6  6E21               	movwf	delay@s+1,c
   227  0000B8  0E64               	movlw	100
   228  0000BA  6E20               	movwf	delay@s,c
   229  0000BC  ECD8  F000         	call	_delay	;wreg free
   230                           
   231                           ;main.c: 155: PORTC_shadow = PORTC_shadow & ~(1 << 7);
   232  0000C0  5029               	movf	_PORTC_shadow,w,c
   233  0000C2  0B7F               	andlw	127
   234  0000C4  6E29               	movwf	_PORTC_shadow,c
   235                           
   236                           ;main.c: 156: PORTC = PORTC_shadow;
   237  0000C6  C029  FF82         	movff	_PORTC_shadow,3970	;volatile
   238                           
   239                           ;main.c: 157: delay(100);
   240  0000CA  0E00               	movlw	0
   241  0000CC  6E21               	movwf	delay@s+1,c
   242  0000CE  0E64               	movlw	100
   243  0000D0  6E20               	movwf	delay@s,c
   244  0000D2  ECD8  F000         	call	_delay	;wreg free
   245  0000D6                     l744:
   246                           
   247                           ;main.c: 162: PORTC_shadow = PORTC_shadow | (1 << 6);
   248  0000D6  5029               	movf	_PORTC_shadow,w,c
   249  0000D8  0940               	iorlw	64
   250  0000DA  6E29               	movwf	_PORTC_shadow,c
   251                           
   252                           ;main.c: 163: PORTC = PORTC_shadow;
   253  0000DC  C029  FF82         	movff	_PORTC_shadow,3970	;volatile
   254                           
   255                           ;main.c: 165: PORTC_shadow = PORTC_shadow | (1 << 5);
   256  0000E0  5029               	movf	_PORTC_shadow,w,c
   257  0000E2  0920               	iorlw	32
   258  0000E4  6E29               	movwf	_PORTC_shadow,c
   259                           
   260                           ;main.c: 166: PORTC = PORTC_shadow;
   261  0000E6  C029  FF82         	movff	_PORTC_shadow,3970	;volatile
   262                           
   263                           ;main.c: 167: delay(1000);
   264  0000EA  0E03               	movlw	3
   265  0000EC  6E21               	movwf	delay@s+1,c
   266  0000EE  0EE8               	movlw	232
   267  0000F0  6E20               	movwf	delay@s,c
   268  0000F2  ECD8  F000         	call	_delay	;wreg free
   269                           
   270                           ;main.c: 168: PORTC_shadow = PORTC_shadow & ~(1 << 5);
   271  0000F6  5029               	movf	_PORTC_shadow,w,c
   272  0000F8  0BDF               	andlw	223
   273  0000FA  6E29               	movwf	_PORTC_shadow,c
   274                           
   275                           ;main.c: 169: PORTC = PORTC_shadow;
   276  0000FC  C029  FF82         	movff	_PORTC_shadow,3970	;volatile
   277                           
   278                           ;main.c: 170: delay(1000);
   279  000100  0E03               	movlw	3
   280  000102  6E21               	movwf	delay@s+1,c
   281  000104  0EE8               	movlw	232
   282  000106  6E20               	movwf	delay@s,c
   283  000108  ECD8  F000         	call	_delay	;wreg free
   284                           
   285                           ;main.c: 173: PORTC_shadow = PORTC_shadow & ~(1 << 6);
   286  00010C  5029               	movf	_PORTC_shadow,w,c
   287  00010E  0BBF               	andlw	191
   288  000110  6E29               	movwf	_PORTC_shadow,c
   289                           
   290                           ;main.c: 174: PORTC = PORTC_shadow;
   291  000112  C029  FF82         	movff	_PORTC_shadow,3970	;volatile
   292                           
   293                           ;main.c: 176: PORTC_shadow = PORTC_shadow | (1 << 5);
   294  000116  5029               	movf	_PORTC_shadow,w,c
   295  000118  0920               	iorlw	32
   296  00011A  6E29               	movwf	_PORTC_shadow,c
   297                           
   298                           ;main.c: 177: PORTC = PORTC_shadow;
   299  00011C  C029  FF82         	movff	_PORTC_shadow,3970	;volatile
   300                           
   301                           ;main.c: 178: delay(1000);
   302  000120  0E03               	movlw	3
   303  000122  6E21               	movwf	delay@s+1,c
   304  000124  0EE8               	movlw	232
   305  000126  6E20               	movwf	delay@s,c
   306  000128  ECD8  F000         	call	_delay	;wreg free
   307                           
   308                           ;main.c: 179: PORTC_shadow = PORTC_shadow & ~(1 << 5);
   309  00012C  5029               	movf	_PORTC_shadow,w,c
   310  00012E  0BDF               	andlw	223
   311  000130  6E29               	movwf	_PORTC_shadow,c
   312                           
   313                           ;main.c: 180: PORTC = PORTC_shadow;
   314  000132  C029  FF82         	movff	_PORTC_shadow,3970	;volatile
   315                           
   316                           ;main.c: 181: delay(1000);
   317  000136  0E03               	movlw	3
   318  000138  6E21               	movwf	delay@s+1,c
   319  00013A  0EE8               	movlw	232
   320  00013C  6E20               	movwf	delay@s,c
   321  00013E  ECD8  F000         	call	_delay	;wreg free
   322  000142  D7C9               	goto	l744
   323  000144                     __end_of_test_shift_register:
   324                           	opt stack 0
   325                           
   326 ;; *************** function _delay *****************
   327 ;; Defined at:
   328 ;;		line 91 in file "main.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;  s               2   31[COMRAM] int 
   331 ;; Auto vars:     Size  Location     Type
   332 ;;  i               2   36[COMRAM] int 
   333 ;;  a               2   34[COMRAM] int 
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2, status,0
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   343 ;;      Params:         2       0       0       0       0       0       0
   344 ;;      Locals:         4       0       0       0       0       0       0
   345 ;;      Temps:          1       0       0       0       0       0       0
   346 ;;      Totals:         7       0       0       0       0       0       0
   347 ;;Total ram usage:        7 bytes
   348 ;; Hardware stack levels used:    1
   349 ;; Hardware stack levels required when called:    2
   350 ;; This function calls:
   351 ;;		Nothing
   352 ;; This function is called by:
   353 ;;		_test_shift_register
   354 ;;		_reset_counter
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358                           	psect	text2
   359  0001B0                     __ptext2:
   360                           	opt stack 0
   361  0001B0                     _delay:
   362                           	opt stack 27
   363                           
   364                           ;main.c: 92: int a = 0;
   365                           
   366                           ;incstack = 0
   367  0001B0  0E00               	movlw	0
   368  0001B2  6E24               	movwf	delay@a+1,c
   369  0001B4  0E00               	movlw	0
   370  0001B6  6E23               	movwf	delay@a,c
   371                           
   372                           ;main.c: 93: int i;
   373                           ;main.c: 94: for (i = 0; i < s; i++) {
   374  0001B8  0E00               	movlw	0
   375  0001BA  6E26               	movwf	delay@i+1,c
   376  0001BC  0E00               	movlw	0
   377  0001BE  6E25               	movwf	delay@i,c
   378  0001C0  D004               	goto	l732
   379  0001C2                     l730:
   380                           
   381                           ;main.c: 95: a++;
   382  0001C2  4A23               	infsnz	delay@a,f,c
   383  0001C4  2A24               	incf	delay@a+1,f,c
   384  0001C6  4A25               	infsnz	delay@i,f,c
   385  0001C8  2A26               	incf	delay@i+1,f,c
   386  0001CA                     l732:
   387  0001CA  5020               	movf	delay@s,w,c
   388  0001CC  5C25               	subwf	delay@i,w,c
   389  0001CE  5026               	movf	delay@i+1,w,c
   390  0001D0  0A80               	xorlw	128
   391  0001D2  6E22               	movwf	??_delay& (0+255),c
   392  0001D4  5021               	movf	delay@s+1,w,c
   393  0001D6  0A80               	xorlw	128
   394  0001D8  5822               	subwfb	??_delay& (0+255),w,c
   395  0001DA  B0D8               	btfsc	status,0,c
   396  0001DC  0012               	return	
   397  0001DE  D7F1               	goto	l730
   398  0001E0                     __end_of_delay:
   399                           	opt stack 0
   400                           status	equ	0xFD8
   401                           
   402 ;; *************** function _low_isr *****************
   403 ;; Defined at:
   404 ;;		line 67 in file "interrupts.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		None
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   418 ;;      Params:         0       0       0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0       0       0
   420 ;;      Temps:         17       0       0       0       0       0       0
   421 ;;      Totals:        17       0       0       0       0       0       0
   422 ;;Total ram usage:       17 bytes
   423 ;; Hardware stack levels used:    1
   424 ;; Hardware stack levels required when called:    1
   425 ;; This function calls:
   426 ;;		Nothing
   427 ;; This function is called by:
   428 ;;		Interrupt level 1
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           	psect	intcodelo
   433  000018                     __pintcodelo:
   434                           	opt stack 0
   435  000018                     _low_isr:
   436                           	opt stack 27
   437                           
   438                           ;incstack = 0
   439  000018  802A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   440  00001A  CFD8 F00F          	movff	status,??_low_isr
   441  00001E  CFE8 F010          	movff	wreg,??_low_isr+1
   442  000022  CFE0 F011          	movff	bsr,??_low_isr+2
   443  000026  CFFA F012          	movff	pclath,??_low_isr+3
   444  00002A  CFFB F013          	movff	pclatu,??_low_isr+4
   445  00002E  CFE9 F014          	movff	fsr0l,??_low_isr+5
   446  000032  CFEA F015          	movff	fsr0h,??_low_isr+6
   447  000036  CFE1 F016          	movff	fsr1l,??_low_isr+7
   448  00003A  CFE2 F017          	movff	fsr1h,??_low_isr+8
   449  00003E  CFD9 F018          	movff	fsr2l,??_low_isr+9
   450  000042  CFDA F019          	movff	fsr2h,??_low_isr+10
   451  000046  CFF3 F01A          	movff	prodl,??_low_isr+11
   452  00004A  CFF4 F01B          	movff	prodh,??_low_isr+12
   453  00004E  CFF6 F01C          	movff	tblptrl,??_low_isr+13
   454  000052  CFF7 F01D          	movff	tblptrh,??_low_isr+14
   455  000056  CFF8 F01E          	movff	tblptru,??_low_isr+15
   456  00005A  CFF5 F01F          	movff	tablat,??_low_isr+16
   457  00005E  C01F  FFF5         	movff	??_low_isr+16,tablat
   458  000062  C01E  FFF8         	movff	??_low_isr+15,tblptru
   459  000066  C01D  FFF7         	movff	??_low_isr+14,tblptrh
   460  00006A  C01C  FFF6         	movff	??_low_isr+13,tblptrl
   461  00006E  C01B  FFF4         	movff	??_low_isr+12,prodh
   462  000072  C01A  FFF3         	movff	??_low_isr+11,prodl
   463  000076  C019  FFDA         	movff	??_low_isr+10,fsr2h
   464  00007A  C018  FFD9         	movff	??_low_isr+9,fsr2l
   465  00007E  C017  FFE2         	movff	??_low_isr+8,fsr1h
   466  000082  C016  FFE1         	movff	??_low_isr+7,fsr1l
   467  000086  C015  FFEA         	movff	??_low_isr+6,fsr0h
   468  00008A  C014  FFE9         	movff	??_low_isr+5,fsr0l
   469  00008E  C013  FFFB         	movff	??_low_isr+4,pclatu
   470  000092  C012  FFFA         	movff	??_low_isr+3,pclath
   471  000096  C011  FFE0         	movff	??_low_isr+2,bsr
   472  00009A  C010  FFE8         	movff	??_low_isr+1,wreg
   473  00009E  C00F  FFD8         	movff	??_low_isr,status
   474  0000A2  902A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   475  0000A4  0010               	retfie	
   476  0000A6                     __end_of_low_isr:
   477                           	opt stack 0
   478                           pclatu	equ	0xFFB
   479                           pclath	equ	0xFFA
   480                           tblptru	equ	0xFF8
   481                           tblptrh	equ	0xFF7
   482                           tblptrl	equ	0xFF6
   483                           tablat	equ	0xFF5
   484                           prodh	equ	0xFF4
   485                           prodl	equ	0xFF3
   486                           fsr0h	equ	0xFEA
   487                           fsr0l	equ	0xFE9
   488                           wreg	equ	0xFE8
   489                           fsr1h	equ	0xFE2
   490                           fsr1l	equ	0xFE1
   491                           bsr	equ	0xFE0
   492                           fsr2h	equ	0xFDA
   493                           fsr2l	equ	0xFD9
   494                           status	equ	0xFD8
   495                           
   496 ;; *************** function _high_isr *****************
   497 ;; Defined at:
   498 ;;		line 27 in file "interrupts.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		None
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   512 ;;      Params:         0       0       0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0       0       0
   514 ;;      Temps:         14       0       0       0       0       0       0
   515 ;;      Totals:        14       0       0       0       0       0       0
   516 ;;Total ram usage:       14 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; This function calls:
   519 ;;		Nothing
   520 ;; This function is called by:
   521 ;;		Interrupt level 2
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           	psect	intcode
   526  000008                     __pintcode:
   527                           	opt stack 0
   528  000008                     _high_isr:
   529                           	opt stack 27
   530                           
   531                           ;incstack = 0
   532  000008  822A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   533  00000A  CFFA F001          	movff	pclath,??_high_isr
   534  00000E  CFFB F002          	movff	pclatu,??_high_isr+1
   535  000012  EFA2  F000         	goto	int_func
   536                           pclatu	equ	0xFFB
   537                           pclath	equ	0xFFA
   538                           tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           prodh	equ	0xFF4
   543                           prodl	equ	0xFF3
   544                           fsr0h	equ	0xFEA
   545                           fsr0l	equ	0xFE9
   546                           wreg	equ	0xFE8
   547                           fsr1h	equ	0xFE2
   548                           fsr1l	equ	0xFE1
   549                           bsr	equ	0xFE0
   550                           fsr2h	equ	0xFDA
   551                           fsr2l	equ	0xFD9
   552                           status	equ	0xFD8
   553                           
   554                           	psect	intcode_body
   555  000144                     __pintcode_body:
   556                           	opt stack 27
   557  000144                     int_func:
   558                           	opt stack 27
   559  000144  CFE9 F003          	movff	fsr0l,??_high_isr+2
   560  000148  CFEA F004          	movff	fsr0h,??_high_isr+3
   561  00014C  CFE1 F005          	movff	fsr1l,??_high_isr+4
   562  000150  CFE2 F006          	movff	fsr1h,??_high_isr+5
   563  000154  CFD9 F007          	movff	fsr2l,??_high_isr+6
   564  000158  CFDA F008          	movff	fsr2h,??_high_isr+7
   565  00015C  CFF3 F009          	movff	prodl,??_high_isr+8
   566  000160  CFF4 F00A          	movff	prodh,??_high_isr+9
   567  000164  CFF6 F00B          	movff	tblptrl,??_high_isr+10
   568  000168  CFF7 F00C          	movff	tblptrh,??_high_isr+11
   569  00016C  CFF8 F00D          	movff	tblptru,??_high_isr+12
   570  000170  CFF5 F00E          	movff	tablat,??_high_isr+13
   571  000174  C00E  FFF5         	movff	??_high_isr+13,tablat
   572  000178  C00D  FFF8         	movff	??_high_isr+12,tblptru
   573  00017C  C00C  FFF7         	movff	??_high_isr+11,tblptrh
   574  000180  C00B  FFF6         	movff	??_high_isr+10,tblptrl
   575  000184  C00A  FFF4         	movff	??_high_isr+9,prodh
   576  000188  C009  FFF3         	movff	??_high_isr+8,prodl
   577  00018C  C008  FFDA         	movff	??_high_isr+7,fsr2h
   578  000190  C007  FFD9         	movff	??_high_isr+6,fsr2l
   579  000194  C006  FFE2         	movff	??_high_isr+5,fsr1h
   580  000198  C005  FFE1         	movff	??_high_isr+4,fsr1l
   581  00019C  C004  FFEA         	movff	??_high_isr+3,fsr0h
   582  0001A0  C003  FFE9         	movff	??_high_isr+2,fsr0l
   583  0001A4  C002  FFFB         	movff	??_high_isr+1,pclatu
   584  0001A8  C001  FFFA         	movff	??_high_isr,pclath
   585  0001AC  922A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   586  0001AE  0011               	retfie		f
   587  0001B0                     __end_of_high_isr:
   588                           	opt stack 0
   589  0000                     pclatu	equ	0xFFB
   590                           pclath	equ	0xFFA
   591                           tblptru	equ	0xFF8
   592                           tblptrh	equ	0xFF7
   593                           tblptrl	equ	0xFF6
   594                           tablat	equ	0xFF5
   595                           prodh	equ	0xFF4
   596                           prodl	equ	0xFF3
   597                           fsr0h	equ	0xFEA
   598                           fsr0l	equ	0xFE9
   599                           wreg	equ	0xFE8
   600                           fsr1h	equ	0xFE2
   601                           fsr1l	equ	0xFE1
   602                           bsr	equ	0xFE0
   603                           fsr2h	equ	0xFDA
   604                           fsr2l	equ	0xFD9
   605                           status	equ	0xFD8
   606                           pclatu	equ	0xFFB
   607                           pclath	equ	0xFFA
   608                           tblptru	equ	0xFF8
   609                           tblptrh	equ	0xFF7
   610                           tblptrl	equ	0xFF6
   611                           tablat	equ	0xFF5
   612                           prodh	equ	0xFF4
   613                           prodl	equ	0xFF3
   614                           fsr0h	equ	0xFEA
   615                           fsr0l	equ	0xFE9
   616                           wreg	equ	0xFE8
   617                           fsr1h	equ	0xFE2
   618                           fsr1l	equ	0xFE1
   619                           bsr	equ	0xFE0
   620                           fsr2h	equ	0xFDA
   621                           fsr2l	equ	0xFD9
   622                           status	equ	0xFD8
   623                           
   624                           	psect	rparam
   625  0000                     pclatu	equ	0xFFB
   626                           pclath	equ	0xFFA
   627                           tblptru	equ	0xFF8
   628                           tblptrh	equ	0xFF7
   629                           tblptrl	equ	0xFF6
   630                           tablat	equ	0xFF5
   631                           prodh	equ	0xFF4
   632                           prodl	equ	0xFF3
   633                           fsr0h	equ	0xFEA
   634                           fsr0l	equ	0xFE9
   635                           wreg	equ	0xFE8
   636                           fsr1h	equ	0xFE2
   637                           fsr1l	equ	0xFE1
   638                           bsr	equ	0xFE0
   639                           fsr2h	equ	0xFDA
   640                           fsr2l	equ	0xFD9
   641                           status	equ	0xFD8
   642                           
   643                           	psect	temp
   644  00002A                     btemp:
   645                           	opt stack 0
   646  00002A                     	ds	1
   647  0000                     int$flags	set	btemp
   648                           pclatu	equ	0xFFB
   649                           pclath	equ	0xFFA
   650                           tblptru	equ	0xFF8
   651                           tblptrh	equ	0xFF7
   652                           tblptrl	equ	0xFF6
   653                           tablat	equ	0xFF5
   654                           prodh	equ	0xFF4
   655                           prodl	equ	0xFF3
   656                           fsr0h	equ	0xFEA
   657                           fsr0l	equ	0xFE9
   658                           wreg	equ	0xFE8
   659                           fsr1h	equ	0xFE2
   660                           fsr1l	equ	0xFE1
   661                           bsr	equ	0xFE0
   662                           fsr2h	equ	0xFDA
   663                           fsr2l	equ	0xFD9
   664                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      41
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _test_shift_register->_delay

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     392
                _test_shift_register
 ---------------------------------------------------------------------------------
 (1) _test_shift_register                                  0     0      0     392
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                7     5      2     392
                                             31 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _low_isr                                             17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _test_shift_register
     _delay

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     26      29       1       43.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      29       3        0.0%
DATA                 0      0      29       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Oct 25 17:22:46 2016

                          bsr 000FE0                           l730 01C2                           l732 01CA  
                         l744 00D6                           wreg 000FE8                          _main 01E0  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 002A                          pclat 000FFA                          prodh 000FF4  
                        prodl 000FF3                          start 00A6                  ___param_bank 000010  
                       ?_main 0001                         _PORTA 000F80                         _PORTB 000F81  
                       _PORTC 000F82                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                         _delay 01B0               __end_of_low_isr 00A6  
                       tablat 000FF5                         status 000FD8               __initialization 020E  
                __end_of_main 020E                        ??_main 0027                 __activetblptr 000000  
                      ?_delay 0020   __end_of_test_shift_register 0144              __end_of_high_isr 01B0  
                      delay@a 0023                        delay@i 0025                        delay@s 0020  
                   ??_low_isr 000F                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                    __accesstop 0060       __end_of__initialization 0212  
               ___rparam_used 000001                __pcstackCOMRAM 0001                 __end_of_delay 01E0  
                     ??_delay 0022                    __pnvCOMRAM 0029                     ?_high_isr 0001  
                     __Hparam 0000                       __Lparam 0000                       __pcinit 020E  
                     __ramtop 0600                       __ptext0 01E0                       __ptext1 00AA  
                     __ptext2 01B0                       _low_isr 0018                    ??_high_isr 0001  
              __pintcode_body 0144          end_of_initialization 0212                       int_func 0144  
__size_of_test_shift_register 009A           start_initialization 020E                   __pbssCOMRAM 0027  
           __size_of_high_isr 01A8                     __pintcode 0008                   __pintcodelo 0018  
                    ?_low_isr 0001                __size_of_delay 0030           _test_shift_register 00AA  
                    __Hrparam 0000                      __Lrparam 0000          ?_test_shift_register 0001  
            __size_of_low_isr 008E                      _high_isr 0008                 __size_of_main 002E  
       ??_test_shift_register 0027                      int$flags 002A                  _PORTA_shadow 0027  
                _PORTB_shadow 0028                  _PORTC_shadow 0029                      intlevel1 0000  
                    intlevel2 0000  
